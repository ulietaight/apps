#!/usr/bin/env bash
set -euo pipefail

# === –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ ===
REPO_DIR="/root/apps"                         # –ø—É—Ç—å –∫ —Ä–µ–ø–æ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ
COMPOSE_FILE="infra/docker-compose.prod.yml"  # compose-—Ñ–∞–π–ª (–ø–æ–ø—Ä–æ–±—É–µ–º –∏ –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤—É)
PROJECT="apps"                                # —Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ –∏–º—è –ø—Ä–æ–µ–∫—Ç–∞
ENV_FILE="$REPO_DIR/.env"                     # –≥–¥–µ —Ö—Ä–∞–Ω–∏—Ç—å –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–ª—è compose

# === autodetect compose v1/v2 ===
if command -v docker-compose >/dev/null 2>&1; then
  COMPOSE="docker-compose"
elif docker compose version >/dev/null 2>&1; then
  COMPOSE="docker compose"
else
  echo "‚ùå Docker Compose –Ω–µ –Ω–∞–π–¥–µ–Ω (–Ω–∏ v1, –Ω–∏ v2)."
  exit 1
fi

cd "$REPO_DIR"

# === –Ω–∞–π—Ç–∏ compose-—Ñ–∞–π–ª, –µ—Å–ª–∏ —É–∫–∞–∑–∞–Ω–Ω–æ–≥–æ –ø—É—Ç–∏ –Ω–µ—Ç ===
if [ ! -f "$COMPOSE_FILE" ]; then
  if [ -f "docker-compose.prod.yml" ]; then
    COMPOSE_FILE="docker-compose.prod.yml"
  elif [ -f "docker-compose.yaml" ]; then
    COMPOSE_FILE="docker-compose.yaml"
  elif [ -f "docker-compose.yml" ]; then
    COMPOSE_FILE="docker-compose.yml"
  else
    echo "‚ùå –ù–µ –Ω–∞—à—ë–ª compose-—Ñ–∞–π–ª (–∏—Å–∫–∞–ª $COMPOSE_FILE, docker-compose.prod.yml, docker-compose.yaml, docker-compose.yml)."
    exit 1
  fi
fi

# === —Å–µ–∫—Ä–µ—Ç—ã –∏–∑ –æ–∫—Ä—É–∂–µ–Ω–∏—è (–ø–µ—Ä–µ–¥–∞—é—Ç—Å—è –∏–∑ GitHub Actions) ===
: "${GHCR_USERNAME:?GHCR_USERNAME not set}"
: "${GHCR_TOKEN:?GHCR_TOKEN not set}"
: "${RIOT_API_KEY:?RIOT_API_KEY not set}"   # ‚Üê –æ–±—è–∑–∞—Ç–µ–ª–µ–Ω

# === –ø–∏—à–µ–º .env –¥–ª—è compose (—Ç–æ–ª—å–∫–æ –Ω—É–∂–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ) ===
umask 077
{
  printf "RIOT_API_KEY=%s\n" "${RIOT_API_KEY}"
  # –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ –¥–æ–±–∞–≤—å –∏ –¥—Ä—É–≥–∏–µ:
  # printf "RIOT_REGIONAL=%s\n" "${RIOT_REGIONAL:-europe}"
} > "$ENV_FILE"

echo "üîê –õ–æ–≥–∏–Ω–∏–º—Å—è –≤ GHCR..."
echo "${GHCR_TOKEN}" | docker login ghcr.io -u "${GHCR_USERNAME}" --password-stdin

echo "üì• –¢—è–Ω–µ–º —Å–≤–µ–∂–∏–µ –æ–±—Ä–∞–∑—ã..."
docker pull "ghcr.io/${GHCR_USERNAME}/apps-backend:latest"
docker pull "ghcr.io/${GHCR_USERNAME}/apps-frontend:latest"

echo "üßπ –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º/—á–∏—Å—Ç–∏–º —Å—Ç–∞—Ä—ã–π —Å—Ç–µ–∫..."
$COMPOSE -f "$COMPOSE_FILE" -p "$PROJECT" down --remove-orphans || true

echo "üöÄ –ó–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–æ–¥..."
$COMPOSE -f "$COMPOSE_FILE" --env-file "$ENV_FILE" -p "$PROJECT" up -d --pull always --no-build

# –±—ã—Å—Ç—Ä–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞, —á—Ç–æ –∫–ª—é—á –ø–æ–ø–∞–ª –≤–Ω—É—Ç—Ä—å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ (–Ω–µ –ø–µ—á–∞—Ç–∞–µ—Ç —Å–∞–º –∫–ª—é—á)
$COMPOSE -f "$COMPOSE_FILE" -p "$PROJECT" exec -T backend sh -lc 'test -n "$RIOT_API_KEY" && echo "RIOT_API_KEY=OK" || (echo "RIOT_API_KEY=MISSING"; exit 1)'

echo "üßº –ß–∏—Å—Ç–∏–º –Ω–µ–∏—Å–ø–æ–ª—å–∑—É–µ–º—ã–µ –æ–±—Ä–∞–∑—ã (dangling)..."
docker image prune -f

echo "‚úÖ –ì–æ—Ç–æ–≤–æ. –°—Ç–∞—Ç—É—Å:"
$COMPOSE -f "$COMPOSE_FILE" -p "$PROJECT" ps
