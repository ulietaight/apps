name: Docker CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Log in to GHCR
      run: echo "${{ secrets.GHCR_TOKEN }}" | docker login ghcr.io -u ${{ secrets.GHCR_USERNAME }} --password-stdin

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Build & Push Backend
      run: |
        docker build -f infra/docker/backend.Dockerfile -t ghcr.io/${{ secrets.GHCR_USERNAME }}/apps-backend:latest ./backend
        docker push ghcr.io/${{ secrets.GHCR_USERNAME }}/apps-backend:latest

    - name: Build & Push Frontend
      run: |
        docker build -f infra/docker/frontend.Dockerfile -t ghcr.io/${{ secrets.GHCR_USERNAME }}/apps-frontend:latest .
        docker push ghcr.io/${{ secrets.GHCR_USERNAME }}/apps-frontend:latest

    - name: üöÄ Deploy to VPS
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.SSH_HOST }}
        username: ${{ secrets.SSH_USER }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        envs: RIOT_API_KEY,GHCR_TOKEN,GHCR_USERNAME
        script: |
          set -euo pipefail
          cd ~/apps
          # –∫–æ–¥ —É–∂–µ –µ—Å—Ç—å ‚Äî –ø–æ–¥—Ç—è–≥–∏–≤–∞–µ–º —Å–≤–µ–∂–∏–π
          git pull origin main || true

          # —Å–æ–∑–¥–∞—ë–º .env –¥–ª—è docker compose (—Ç–æ–ª—å–∫–æ –Ω—É–∂–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ)
          umask 077
          printf "RIOT_API_KEY=%s\n" "$RIOT_API_KEY" > .env

          # –ª–æ–≥–∏–Ω –≤ GHCR, –µ—Å–ª–∏ –æ–±—Ä–∞–∑—ã –ø—Ä–∏–≤–∞—Ç–Ω—ã–µ
          if [ -n "${GHCR_TOKEN:-}" ] && [ -n "${GHCR_USERNAME:-}" ]; then
            echo "$GHCR_TOKEN" | docker login ghcr.io -u "$GHCR_USERNAME" --password-stdin
          fi

          # –æ–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–µ–∫
          docker compose -f docker-compose.prod.yml --env-file .env pull
          docker compose -f docker-compose.prod.yml --env-file .env up -d

          # –±—ã—Å—Ç—Ä–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ ‚Äî –∫–ª—é—á –ø–æ–ø–∞–ª –≤–Ω—É—Ç—Ä—å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞
          docker compose -f docker-compose.prod.yml exec -T backend sh -lc 'test -n "$RIOT_API_KEY" && echo "RIOT_API_KEY=OK" || (echo "RIOT_API_KEY=MISSING"; exit 1)'

