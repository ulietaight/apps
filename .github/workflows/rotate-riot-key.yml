name: Rotate Riot Key

on:
  workflow_dispatch:
    inputs:
      riot_key:
        description: "New RIOT_API_KEY (RGAPI_...)"
        required: true
        type: string

jobs:
  rotate:
    runs-on: ubuntu-latest
    steps:
      - name: Rotate on VPS
        uses: appleboy/ssh-action@v1.0.3
        env:
          RIOT_KEY: ${{ inputs.riot_key }}
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          envs: RIOT_KEY
          script: |
            set -euo pipefail
            cd /root/apps

            # показать, что за файлы есть
            echo "CWD: $(pwd)"; ls -la

            # обновляем/создаём .env
            umask 077
            if [ -f .env ]; then
              sed -i "s/^RIOT_API_KEY=.*/RIOT_API_KEY=${RIOT_KEY}/" .env || true
              grep -q '^RIOT_API_KEY=' .env || echo "RIOT_API_KEY=${RIOT_KEY}" >> .env
            else
              echo "RIOT_API_KEY=${RIOT_KEY}" > .env
            fi

            # найти compose-файл умно
            CF=""
            for cand in \
              docker-compose.prod.yml docker-compose.prod.yaml \
              docker-compose.yml docker-compose.yaml \
              infra/docker-compose.prod.yml infra/docker-compose.prod.yaml \
              infra/docker/docker-compose.prod.yml infra/docker/docker-compose.prod.yaml
            do
              [ -f "$cand" ] && CF="$cand" && break
            done
            if [ -z "$CF" ]; then
              echo "❌ Не нашёл compose-файл"; find . -maxdepth 3 -type f -iname 'docker-compose*.y*'; exit 1
            fi
            echo "Compose file: $CF"

            # мягкий рестарт только backend
            docker compose -f "$CF" --env-file .env up -d --force-recreate --no-build backend

            # проверка наличия переменной
            docker compose -f "$CF" exec -T backend sh -lc 'test -n "$RIOT_API_KEY" && echo "RIOT_API_KEY=OK" || (echo "RIOT_API_KEY=MISSING"; exit 1)'
